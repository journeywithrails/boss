{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf420
{\fonttbl\f0\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 Multi-entity forms\
\
-- pass :index => nil to form fields to avoid having rails put id in indices\
-- add hidden field to hold id of saved records\
-- in virtual attribute check for :id in params\
-- look up records by detect (in memory) in virtual attributes to avoid firing the association in the middle of building it\
	r = records.detect\{|r| == params[:id].to_i\}\
\
-- use after_update to cascade saves because rails doesn't cascade save in existing models\
\
	after_update :save_children\
\
	def save_children\
		children.each do |c|\
			if c.should_destroy\
				c.destroy\
			else\
				 c.save(false)\
			end\
		end\
	end\
\
-- save children without validation and handle validation by using validates_associated in parent model\
\
-- virtual attribute should_destroy on children record, put in hidden field and set to 1  when removing child on client\
\
function mark_for_destroy(elm)\{\
	$(element).next('should_destroy').value = 1;\
	$(element).up('.task').hide();\
\}}